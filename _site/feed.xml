<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Caleb Blog</title>
    <description>Every failure is leading towards success.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 17 Feb 2019 00:56:17 +0800</pubDate>
    <lastBuildDate>Sun, 17 Feb 2019 00:56:17 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>MIPS指令集结构和基本流水线</title>
        <description>&lt;h3 id=&quot;mips指令集结构&quot;&gt;MIPS指令集结构&lt;/h3&gt;
&lt;h6 id=&quot;1mips的寄存器&quot;&gt;1.MIPS的寄存器&lt;/h6&gt;
&lt;p&gt;32个64位通用寄存器（GPRs）：R0，R1，…，R31（存整数）
32个64位浮点数寄存器（FPRs）：F0，F1，…，F31（浮点数）
一些特殊寄存器，可以与通用寄存器交换数据。&lt;/p&gt;

&lt;h6 id=&quot;2-mips的数据表示&quot;&gt;2 .MIPS的数据表示&lt;/h6&gt;
&lt;p&gt;整数
字节（8位）   半字（16位）
字（32位）    双字（64位）&lt;/p&gt;

&lt;p&gt;浮点数
单精度浮点数（32位）  双精度浮点数（64位）&lt;/p&gt;

&lt;p&gt;字节、半字或者字在装入64位寄存器时，用零扩展或者用符号位扩展来填充该寄存器的剩余部分。装入以后，对它们将按照64位整数的方式进行运算。&lt;/p&gt;

&lt;h6 id=&quot;3-mips的数据寻址方式&quot;&gt;3 .MIPS的数据寻址方式&lt;/h6&gt;
&lt;p&gt;立即数寻址与偏移量寻址&lt;/p&gt;

&lt;p&gt;立即数字段和偏移量字段都是16位的。&lt;/p&gt;

&lt;p&gt;寄存器间接寻址是通过把0作为偏移量来实现的&lt;/p&gt;

&lt;p&gt;16位绝对寻址是通过把R0（其值永远为0）作为基址寄存器来完成的&lt;/p&gt;

&lt;p&gt;MIPS的存储器是按字节寻址的，地址为64位&lt;/p&gt;

&lt;p&gt;所有存储器访问都必须是边界对齐的&lt;/p&gt;
&lt;h6 id=&quot;4-mips的指令格式&quot;&gt;4 .MIPS的指令格式&lt;/h6&gt;
&lt;p&gt;寻址方式编码到操作码中&lt;/p&gt;

&lt;p&gt;所有的指令都是32位的，操作码占6位&lt;/p&gt;

&lt;p&gt;3种指令格式：&lt;/p&gt;

&lt;p&gt;I类指令
包括所有的load和store指令、立即数指令、分支指令、寄存器跳转指令、寄存器链接跳转指令。
立即数字段为16位，用于提供立即数或偏移量。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/I-Instru.png&quot; alt=&quot;css-learn1&quot; /&gt;
R类指令
包括ALU指令、专用寄存器读/写指令、move指令等。
ALU指令
      Regs[rd]← Regs[rs] funct Regs[rt]
      func为具体的运算操作编码
&lt;img src=&quot;/img/I-Instru.png&quot; alt=&quot;css-learn1&quot; /&gt;
J类指令&lt;/p&gt;

&lt;p&gt;包括跳转指令、跳转并链接指令、自陷指令、异常返回指令。
在这类指令中，指令字的低26位是偏移量，它与PC值相加形成跳转的地址。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/J-Instru.png&quot; alt=&quot;J&quot; /&gt;&lt;/p&gt;

&lt;h6 id=&quot;5-mips的操作&quot;&gt;5 .MIPS的操作&lt;/h6&gt;
&lt;p&gt;MIPS指令可以分为四大类
load和store—–ALU操作—–分支与跳转——-浮点操作&lt;/p&gt;

&lt;p&gt;符号的意义 :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;x←ny：从y传送n位到x
x，y←z：把z传送到x和y 
下标：表示字段中具体的位；
上标：用于表示对字段进行复制的次数。
符号##：用于两个字段的拼接，并且可以出现在数据传送的任何一边。 举例：R8、R10：64位的寄存器，则
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/eg.png&quot; alt=&quot;eg&quot; /&gt;
表示的意义是：以R6的内容作为地址访问内存，得到的字节按符号位扩展为32位后存入R8的低32位，R8的高32位（即Regs[R8]0..31）不变。&lt;/p&gt;

&lt;p&gt;load和store
&lt;img src=&quot;/img/LS.png&quot; alt=&quot;css-learn1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ALU操作
&lt;img src=&quot;/img/ALU.png&quot; alt=&quot;css-learn1&quot; /&gt;&lt;/p&gt;

&lt;h6 id=&quot;6-mips的控制指令由一组跳转和一组分支指令来实现控制流的改变&quot;&gt;6 .MIPS的控制指令:由一组跳转和一组分支指令来实现控制流的改变&lt;/h6&gt;
&lt;p&gt;典型的MIPS控制指令:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/J.png&quot; alt=&quot;J&quot; /&gt;&lt;/p&gt;

&lt;p&gt;跳转指令&lt;/p&gt;

&lt;p&gt;根据跳转指令确定目标地址的方式不同以及跳转时是否链接，可以把跳转指令分成4种。&lt;/p&gt;

&lt;p&gt;确定目标地址的方式&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;把指令中的26位偏移量左移2位（因为指令字长都是4个字节）后，替换程序计数器的低28位。
间接跳转：由指令中指定的一个寄存器来给出转移目标地址。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;跳转的两种类型&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;简单跳转：把目标地址送入程序计数器。
跳转并链接：把目标地址送入程序计数器，把返回地址（即顺序下一条指令的地址）放入寄存器R31。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;分支指令（条件转移）&lt;/p&gt;

&lt;p&gt;分支条件由指令确定。例如：测试某个寄存器的值是否为零&lt;/p&gt;

&lt;p&gt;提供一组比较指令，用于比较两个寄存器的值。例如：“置小于”指令&lt;/p&gt;

&lt;p&gt;有的分支指令可以直接判断寄存器内容是否为负，或者比较两个寄存器是否相等。&lt;/p&gt;

&lt;p&gt;分支的目标地址:由16位带符号偏移量左移两位后和PC相加的结果来决定&lt;/p&gt;

&lt;p&gt;一条浮点条件分支指令：通过测试浮点状态寄存器来决定是否进行分支。&lt;/p&gt;

&lt;h3 id=&quot;流水线&quot;&gt;流水线&lt;/h3&gt;
&lt;p&gt;流水线的基本概念&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	重复的过程分解为若干个子过程，每个子过程由专门的功能部件来实现。
	依次通过各功能段，这样，每个子过程就可以与其他的子过程并行进行。适合大量重复的时序过程。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;时空图从时间和空间两个方面描述了流水线的工作过程。如：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/shikong.png&quot; alt=&quot;css-learn1&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	注意静态流水线一个功能的各段完成后才能开始另一种功能。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;时间长的段将成为流水线的瓶颈。解决方法：1.细分瓶颈段2.重复设置瓶颈段(增加硬件)&lt;/p&gt;

&lt;p&gt;流水线每一个功能部件的后面都要有一个缓冲寄存器用于在两段之间传送数据、并把各段的处理工作相互隔离，称为流水寄存器。&lt;/p&gt;

&lt;p&gt;分类：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;单功能流水线和多功能流水线；
静态流水线(同一时间内，多功能流水线中的各段只能按同一种功能的连接方式工作)与动态流水线;
部件级流水线（运算操作流水线）and处理机级流水线（指令流水线mips采用）and处理机间流水线（宏流水线,不止一个处理机）
线性流水线与非线性流水线（多一个反馈回路）
顺序流水线与乱序流水线（允许后进入流水线的任务先完成）
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3.2	流水线的性能指标&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;吞吐率：在单位时间内流水线所完成的任务数量或输出结果的数量。任务数除以时间。
加速比：完成同样一批任务，不使用流水线所用的时间与使用流水线所用的时间之比。
效率：流水线中的设备实际使用时间与整个运行时间的比值，即流水线设备的利用率。时空图面积占的比例。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;英语&quot;&gt;英语&lt;/h3&gt;

&lt;p&gt;继续读《温夫人的扇子》”LADY WINDERMERE’S FAN”&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;domestic  一心只管家务的
obliged 要求
susceptible 易受影响的
excessively 过分的
brutal 不讲理的
incessantly 不断地
suicide 自杀
winking at 使眼色、挤眉弄眼
petticoat 裙子
aberration 越轨
wretch 可怜的人
refuge 避难所
bid 表示 &quot;bid good-bye to ..&quot;大人离开时让孩子对对方说的话
circular tin 圆的罐头
palatable 可口的
exeunt 退场
hideous 可怕的
bureau 衣柜
infatuation 迷恋
monstrous 巨大的
squander 浪费
infamous 声名狼藉的
jealous of her honour 在乎她的面子
degraded 可耻
stained 玷污的
utterly 完全地
tainted 污染的
myth 虚构的人、神话
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Everything is going well, but I need to promote efficiency and do more and learn more.&lt;/p&gt;

&lt;p&gt;“for wisdom is better than jewels, and all that you may desire cannot compare with her.–PROVERBS 8:11”&lt;/p&gt;

&lt;p&gt;“因为智慧比珍珠(或作“红宝石”)更美,一切可喜爱的,都不足与比较。–箴言8：11”&lt;/p&gt;
</description>
        <pubDate>Sat, 16 Feb 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/jekyll/update/2019/02/16/dailygo/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/update/2019/02/16/dailygo/</guid>
        
        <category>MIPS指令集结构</category>
        
        <category>流水线</category>
        
        <category>英语</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>记录</title>
        <description>&lt;p&gt;强迫自己输出一千字,昨天的字数好像不到一千。。。&lt;/p&gt;

&lt;h3 id=&quot;英语&quot;&gt;英语&lt;/h3&gt;
&lt;p&gt;接着读《温夫人的扇子》 &lt;em&gt;LADY WINDERMERE’S FAN&lt;/em&gt;，学习和复习了一些单词短语：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;console 安慰			以前只知道有控制台的意思
vile 下流的、肮脏的 	竟然还有人名“瓦伊尔”，有人会起这名么
stir 走动、搅拌		
mercenary 唯利是图的，同时是名词“唯利是图者、雇佣兵”
dreadful 糟透的
hard and fast 死板的、严格的
affectation 冒充
Duchess 公爵夫人、女公爵
ball 舞会				涨知识了。。
furious 狂怒的
scandal 丑闻、流言蜚语
elbow 推挤
nag 唠叨
invariably 总是
odd trick 决胜负的最后一墩牌
depraved 堕落的
trivial 不正经的、不重要的
concession 让步
wits 智慧    as a concession to my poor wits 请体谅我生性愚钝
intelligible 可理解的
insincere 不诚实的
gown 礼服
horrid 可怕的
disreputable 声名狼藉的
trial 试验
infatuated 迷恋
inadmissible 不被允许的
refinement 文雅、细腻
distressed 难过的  看了四页，有点慢，单词认识的越多，阅读应该会更快吧。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;htmlcssjs&quot;&gt;html、css、js&lt;/h3&gt;
&lt;p&gt;学习实现网页游戏飞机大战，&lt;a href=&quot;https://jiale15.github.io/planewar&quot;&gt;在这里&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;结构html:&lt;/p&gt;

&lt;p&gt;Head标签里引用
&lt;code class=&quot;highlighter-rouge&quot;&gt;css:&amp;lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/mycss.css&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Body标签最后引用js:
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;src=&quot;js/myjs.js&quot;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Body 里一个contentdiv设定整体画面大小，所有动作、显示都在这个里面&lt;/p&gt;

&lt;p&gt;Startdiv开始画面，一个按钮，点击按钮，执行a:begin()函数，在js中完成这个函数&lt;/p&gt;

&lt;p&gt;Maindiv 主界面内部scorediv分数显示界面：&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;label&amp;gt;分数：&amp;lt;/label&amp;gt;
										&amp;lt;label id=&quot;label&quot;&amp;gt;0&amp;lt;/label&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;suspenddiv  暂停界面：三个按钮 继续，重新、回主页
	enddiv 结束界面 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;p class=&quot;plantext&quot;&amp;gt;分数&amp;lt;/p&amp;gt;
		   		&amp;lt;p id=&quot;plantscore&quot;&amp;gt;0&amp;lt;/p&amp;gt;
		   		&amp;lt;button onclick=&quot;go_on()&quot;&amp;gt;go-on&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;表现css:
	一个通配符选择器，页面初始化 *{margin:0;	padding:0; }
	#contentdiv   id选择器
	#startdiv   width: 320px; 568px;  改成300 500
	button{outline: none;}
#startdiv button 设定startdiv里按钮的样式
#maindiv
#maindiv img
#scorediv两个，下面的字体小一点
#scorediv
#suspenddiv
#suspenddiv button
#enddiv
.plantext 结束时的分数样式  类选择器
#planscore
#enddiv div
#enddiv div button&lt;/p&gt;

&lt;p&gt;行为js:&lt;/p&gt;

&lt;p&gt;先获得界面
Maindiv   startdiv  scorediv   suspenddiv   enddiv&lt;/p&gt;

&lt;p&gt;获得分数界面var scorelabel=document.getElementById(“label”);&lt;/p&gt;

&lt;p&gt;获得游戏结束后分数统计界面var planscore=document.getElementById(“planscore”);&lt;/p&gt;

&lt;p&gt;开始游戏按钮点击事件function begin()里面的set=setInterval(start,20);//调用开始函数start()&lt;/p&gt;

&lt;p&gt;然后是start()函数
	创建敌方飞机,移动敌方飞机,如果敌机超出边界,删除敌机,当敌机死亡标记为true时，经过一段时间后清除敌机,创建子弹,移动子弹,如果子弹超出边界,删除子弹,碰撞判断。&lt;/p&gt;

&lt;p&gt;js里的代码有点多，还没搞清楚，虽然注释挺多。&lt;/p&gt;

&lt;p&gt;今天没有学习计算机体系结构，提醒自己明天不要忘了，早睡早起好习惯，加油。&lt;/p&gt;

&lt;p&gt;“A cheerful heart is a good medicine,but a downcast spirit dries up the bones.–PROVERBS 17:22”&lt;/p&gt;

&lt;p&gt;“喜乐的心，乃是良药；忧伤的灵，使骨枯干。箴17：22”&lt;/p&gt;
</description>
        <pubDate>Fri, 15 Feb 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/jekyll/update/2019/02/15/dailygo/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/update/2019/02/15/dailygo/</guid>
        
        <category>html css js</category>
        
        <category>英语</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>记录</title>
        <description>&lt;p&gt;强迫自己输出一千字&lt;/p&gt;

&lt;h3 id=&quot;htmlcss&quot;&gt;html、css&lt;/h3&gt;

&lt;p&gt;浏览了html的所有标签，对网页有了更深的认识：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;html用与结构，css用于表现，js用于行为
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;关于css学习的思维导图；
&lt;img src=&quot;/img/css-learn1.png&quot; alt=&quot;css-learn1&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;计算机体系结构出来混总是要还的&quot;&gt;计算机体系结构(出来混总是要还的)&lt;/h3&gt;

&lt;p&gt;第二章：计算机指令集结构&lt;/p&gt;

&lt;p&gt;2.1指令集结构的分类&lt;/p&gt;

&lt;p&gt;分类的因素：存储操作数的存储单元的类型&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1.堆栈
2.累加器
3.通用寄存器组 （主流） 通用寄存器结构继续进行分类：
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;RM(register-memory)和RR(register-register)，关于RR结构，也称为load-store结构，强调只有load和store指令能够访问存储器。&lt;/p&gt;

&lt;p&gt;2.2寻址方式&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/xunzhi.png&quot; alt=&quot;tu&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2.3功能设计&lt;/p&gt;

&lt;p&gt;根据速度、成本和灵活性来确定–&amp;gt;软、硬件功能分配。&lt;/p&gt;

&lt;p&gt;对指令集的要求：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	完整性：足够的指令，即功能齐全
	规整性：对称性、匀称性（适应存储单元）
	高效率
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;设计策略&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	CISC Complex Instruction Set Computer复杂指令集计算机：指令功能复杂-&amp;gt;控制器硬件复杂，不利于流水线
	RISC Reduced Instruction Set Computer精简指令集计算机：指令少而简单、load-store结构、流水线
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; 控制指令&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;跳转
分支（有条件）（改变控制流的大部分指令）：条件三种实现：条件码、条件寄存器、比较与分支
调用/返回（除改变控制流外，可能要保存机器状态）
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; 转移目标地址的表示常用偏移量加程序计数器PC。（PC相对寻址）&lt;/p&gt;

&lt;p&gt;2.4操作数的类型和大小&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	类型：a.指令中操作码指定 b.数据中加标志符(动态检测，所以少见)
	大小：字节8位、半字16位、字32位、双字64位
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;英语&quot;&gt;英语&lt;/h3&gt;
&lt;p&gt;读了几页《温夫人的扇子》”LADY WINDERMERE’S FAN”，学习和复习了一些单词短语：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;compliment 恭维
heap 堆、大量
vanity 虚荣
conceited 自负的
disposition 性情
astounding 使人震惊的
extravagant 过分的
Puritan 清教徒
speculation 投机
sacrament 神圣的东西
purification 净化
carpet 地毯	terrace 阳台
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;对温夫人的挺认同的，“allow of no compromise”决不妥协，面对一些事情的时候要坚持底线决不妥协。&lt;/p&gt;

&lt;p&gt;“life ideal is Love” 恰巧今天是Valentine’s Day。生活中应该处处充满爱才是理想状态，家人之间、朋友之间，显然不止恋人之间。圣经上说“你们要爱人如己”，显然我没有做到，努力改变，希望让自己成为别人祝福，就像今天学习然后写博客一样，明天也要继续啊。&lt;/p&gt;

&lt;p&gt;“Keep your heart with all vigilance, for from it flow the springs of life.–PROVERBS 4:23”
“你要保守你心，胜过保守一切，因为一生的果效，是由心发出。–箴言4章23节”&lt;/p&gt;
</description>
        <pubDate>Thu, 14 Feb 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/jekyll/update/2019/02/14/dailygo/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/update/2019/02/14/dailygo/</guid>
        
        <category>css</category>
        
        <category>指令集</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>关于博客</title>
        <description>&lt;h5 id=&quot;过程记录&quot;&gt;过程记录&lt;/h5&gt;
&lt;p&gt;先将远程仓库clone到本地，进入仓库目录下&lt;br /&gt;
	添加远程连接：  git remote add origin 仓库地址&lt;br /&gt;
	本地和远程关联：git branch –set-upstream-to=origin/master master&lt;/p&gt;

&lt;p&gt;然后安装好jekyll和依赖包后，进入仓库目录。执行命令 jekyll server，接着在文件夹_posts下创建markdown文件，使用MarkdownPad打开，使用markdown语言编辑博客。之前不知道关于这个文件名的格式应该是“xxxx-xx-xx-名称”，也就是“年-月-日-名称”。&lt;/p&gt;

&lt;p&gt;编辑完成后，在本地使用网址localhost:4000查看的，然后发现地址是这样的localhost:4000/jekyll/update/2019/02/05/。进入对应的文件夹发现发现最里面是一个index.html。稍微有点理解jekyll了，自动分析保存的的markdown文件，然后生成对应的html页面。&lt;br /&gt;
还有很多不明白的，但是最基本的写博客已经可以进行了.慢慢来，每天进步一点点。&lt;/p&gt;

&lt;p&gt;在git里使用	git add命令的时候，告诉我paths are ignored.最后使用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add -A 就可以了。  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2019.2.6 17：45&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;交流Email：1575996446@qq.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 06 Feb 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/jekyll/update/2019/02/06/startbolg/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/update/2019/02/06/startbolg/</guid>
        
        <category>Blog</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Welcome to</title>
        <description>&lt;h3 id=&quot;半个小时前写的博客没保存电脑卡了&quot;&gt;半个小时前写的博客没保存，电脑卡了。。。。&lt;/h3&gt;
&lt;p&gt;就这样吧，任务完成的还不错，明天学习前后端的交互，2019.2.6&lt;/p&gt;
</description>
        <pubDate>Tue, 05 Feb 2019 22:04:39 +0800</pubDate>
        <link>http://localhost:4000/jekyll/update/2019/02/05/welcome-to/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/update/2019/02/05/welcome-to/</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
